@{
    ViewData["Title"] = "Submit Claim"; // Sets the page title
}

<div class="container">
    <!-- Main container -->
    <h2 class="text-blue mb-4">Submit New Claim</h2> <!-- Page heading -->

    @if (TempData["Error"] != null) // Check for error messages
    {
        <div class="alert alert-danger">@TempData["Error"]</div> <!-- Display error message -->
    }

    <div class="claim-form">
        <!-- Claim form container -->
        <form method="post" asp-action="SubmitClaim" enctype="multipart/form-data"> <!-- Claim form with file upload support -->
            <div class="row mb-3">
                <!-- Month and year row -->
                <div class="col-md-6">
                    <!-- Month selection -->
                    <label for="claimMonth" class="form-label">Claim Month</label> <!-- Month label -->
                    <select class="form-select" id="claimMonth" name="claimMonth" required> <!-- Month dropdown -->
                        <option value="">Select Month</option> <!-- Default option -->
                        <option value="1">January</option> <!-- January option -->
                        <option value="2">February</option> <!-- February option -->
                        <option value="3">March</option> <!-- March option -->
                        <option value="4">April</option> <!-- April option -->
                        <option value="5">May</option> <!-- May option -->
                        <option value="6">June</option> <!-- June option -->
                        <option value="7">July</option> <!-- July option -->
                        <option value="8">August</option> <!-- August option -->
                        <option value="9">September</option> <!-- September option -->
                        <option value="10">October</option> <!-- October option -->
                        <option value="11">November</option> <!-- November option -->
                        <option value="12">December</option> <!-- December option -->
                    </select>
                </div>
                <div class="col-md-6">
                    <!-- Year input -->
                    <label for="claimYear" class="form-label">Claim Year</label> <!-- Year label -->
                    <input type="number" class="form-control" id="claimYear" name="claimYear" value="2025" min="2020" max="2030" required> <!-- Year input -->
                </div>
            </div>

            <div class="mb-3">
                <!-- Hours worked input -->
                <label for="hoursWorked" class="form-label">Total Hours Worked</label> <!-- Hours label -->
                <input type="number" class="form-control" id="hoursWorked" name="hoursWorked" step="0.5" min="1" max="200" required> <!-- Hours input -->
            </div>

            <div class="mb-3">
                <!-- Hourly rate input -->
                <label for="hourlyRate" class="form-label">Hourly Rate (R)</label> <!-- Rate label -->
                <input type="number" class="form-control" id="hourlyRate" name="hourlyRate" step="0.01" min="50" max="1000" required> <!-- Rate input -->
            </div>

            <div class="mb-3">
                <!-- Total amount display -->
                <label for="totalAmount" class="form-label">Total Amount (R)</label> <!-- Total label -->
                <input type="text" class="form-control" id="totalAmount" value="R 0.00" readonly> <!-- Total input (readonly) -->
            </div>

            <div class="mb-3">
                <!-- Description textarea -->
                <label for="description" class="form-label">Description of Work</label> <!-- Description label -->
                <textarea class="form-control" id="description" name="description" rows="3" placeholder="Describe the work performed during this period..." required></textarea> <!-- Description textarea -->
            </div>

            <div class="mb-4">
                <!-- Document upload section -->
                <label class="form-label">Upload Supporting Documents</label> <!-- Upload label -->
                <div class="mb-2">
                    <input type="file" class="form-control" id="supportingDocuments" name="supportingDocuments" multiple accept=".pdf,.jpg,.png,.docx,.xlsx"> <!-- File input for multiple documents -->
                    <div class="form-text">You can select multiple files. Maximum file size: 5MB each. Supported formats: PDF, JPG, PNG, DOCX, XLSX</div> <!-- Upload restrictions -->
                </div>
                <div id="fileList" class="mt-2"></div> <!-- File list display -->
            </div>

            <div class="d-grid gap-2">
                <!-- Form actions -->
                <button type="submit" class="btn btn-primary">Submit Claim</button> <!-- Submit button -->
                <a href="@Url.Action("Claims","Home")" class="btn btn-outline-secondary">Cancel</a> <!-- Cancel button -->
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        // Calculate total amount in real-time
        function calculateTotal() {
            const hours = parseFloat(document.getElementById('hoursWorked').value) || 0;
            const rate = parseFloat(document.getElementById('hourlyRate').value) || 0;
            const total = hours * rate;
            document.getElementById('totalAmount').value = 'R ' + total.toLocaleString('en-ZA', { minimumFractionDigits: 2 });
        }

        // Display selected files
        function displaySelectedFiles() {
            const fileInput = document.getElementById('supportingDocuments');
            const fileList = document.getElementById('fileList');
            fileList.innerHTML = '';

            if (fileInput.files.length > 0) {
                let fileListHTML = '<strong>Selected Files:</strong><ul class="mt-2">';
                for (let i = 0; i < fileInput.files.length; i++) {
                    const file = fileInput.files[i];
                    const fileSize = (file.size / 1024 / 1024).toFixed(2);
                    fileListHTML += `<li>${file.name} (${fileSize} MB)</li>`;
                }
                fileListHTML += '</ul>';
                fileList.innerHTML = fileListHTML;
            }
        }

        // Initialize event listeners when document is ready
        document.addEventListener('DOMContentLoaded', function() {
            // Claim form calculations
            const hoursInput = document.getElementById('hoursWorked');
            const rateInput = document.getElementById('hourlyRate');
            if (hoursInput && rateInput) {
                hoursInput.addEventListener('input', calculateTotal);
                rateInput.addEventListener('input', calculateTotal);
                // Calculate initial total
                calculateTotal();
            }

            // File selection handling
            const fileInput = document.getElementById('supportingDocuments');
            if (fileInput) {
                fileInput.addEventListener('change', displaySelectedFiles);
            }

            // Form validation
            const form = document.querySelector('form');
            form.addEventListener('submit', function(e) {
                const files = document.getElementById('supportingDocuments').files;
                for (let i = 0; i < files.length; i++) {
                    const file = files[i];
                    const fileSize = file.size / 1024 / 1024; // MB
                    if (fileSize > 5) {
                        e.preventDefault();
                        alert(`File "${file.name}" exceeds 5MB limit. Please select smaller files.`);
                        return;
                    }
                }
            });
        });
    </script>
}